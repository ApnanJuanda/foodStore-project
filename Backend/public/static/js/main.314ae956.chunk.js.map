{"version":3,"sources":["pages/Home/menus.js","config.js","components/StoreLogo/index.js","components/TopBar/index.js","features/Products/constants.js","api/product.js","features/Products/actions.js","pages/Home/tags.js","utils/index.js","utils/formatRupiah.js","components/Cart/index.js","features/Cart/constants.js","features/Cart/actions.js","pages/Home/index.js","features/Auth/constants.js","features/Auth/reducer.js","features/Products/reducer.js","features/Cart/reducer.js","app/store.js","app/listener.js","api/cart.js","pages/Register/validation.js","api/auth.js","pages/Register/index.js","pages/RegisterSuccess/index.js","features/Auth/actions.js","pages/Login/validation.js","pages/Login/index.js","components/SelectWilayah/index.js","api/address.js","pages/UserAddressAdd/validation.js","pages/UserAddressAdd/index.js","hooks/address.js","pages/UserAddress/index.js","api/order.js","pages/Checkout/index.js","components/StatusLabel/index.js","api/invoice.js","pages/Invoice/index.js","pages/UserAccount/index.js","pages/UserOrders/index.js","pages/Logout/index.js","components/GuardRoute/index.js","components/GuestOnlyRoute/index.js","App.js","reportWebVitals.js","index.js"],"names":["menus","icon","label","id","dotenv","config","process","account_no","bank_name","StoreLogo","to","className","TopBar","auth","useSelector","state","desktop","justify","items","user","clasName","full_name","START_FETCHING_PRODUCT","ERROR_FETCHING_PRODUCT","SUCCESS_FETCHING_PRODUCT","SET_PAGE","SET_KEYWORD","SET_CATEGORY","SET_TAGS","NEXT_PAGE","PREV_PAGE","TOGGLE_TAG","getProducts","params","a","axios","get","debouncedFetchProducts","debounce","startFetchingProducts","type","successFetchingProducts","payload","errorFetchingProducts","tags","utama","pastry","snack","minuman","sumPrice","reduce","acc","curr","price","qty","formatRupiah","number","isNaN","parseInt","Intl","NumberFormat","maximumSignificantDigits","style","currency","format","Cart","onItemInc","onItemDec","onCheckout","total","as","text","fitContainer","iconAfter","disabled","length","onClick","map","item","index","imgUrl","image_url","name","color","onInc","_","onDec","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEMS","SET_ITEMS","addItem","clearItems","Home","dispatch","useDispatch","products","cart","history","useHistory","React","getState","perPage","currentPage","keyword","category","limit","skip","q","data","count","sidebar","verticalAlign","active","onChange","setCategory","content","fullRound","value","placeholder","e","target","tag","slice","toUpperCase","isActive","includes","toggleTag","status","product","title","onAddToCart","totalItems","page","onNext","setPage","onPrev","removeItem","push","sidebarSize","USER_LOGIN","USER_LOGOUT","initialState","localStorage","getItem","JSON","parse","token","statuslist","reducer","action","filter","currentAuth","currentCart","composerEnhacer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducers","combineReducers","productReducer","find","_id","store","createStore","applyMiddleware","thunk","saveCart","put","headers","authorization","getCart","error","listener","previousAuth","previousCart","setItem","stringify","rules","required","message","maxLength","pattern","registerUser","post","login","email","password","logout","then","response","Register","useForm","register","handleSubmit","errors","setError","setStatus","onSubmit","formData","password_confirmation","Object","keys","fields","forEach","field","properties","size","errorMessage","ref","RegisterSuccess","userLogin","Login","SelectWilayah","tingkat","kodeInduk","setData","isFetching","setIsFetching","finally","options","wilayah","nama","kode","isLoading","isDisabled","defaultProps","getAddress","createAddress","minLength","UserAddressAdd","setValue","watch","getValues","allFields","provinsi","kabupaten","kecamatan","updateValue","shouldValidate","shouldDirty","nama_alamat","detail","detail_alamat","kelurahan","option","statusList","useAddressData","setCount","setLimit","fetchAddress","columns","Header","accessor","alamat","kabupatem","UserAddress","onPageChange","createOrder","getOrders","IconWrapper","children","steps","src","width","alt","addressColumns","Checkout","useState","activeStep","setActiveStep","selectedAddress","setSelectedAddress","delivery_fee","delivery_address","showPagination","selectable","primaryKey","selectedRow","onSelectRow","tablet","mobile","iconBefore","StatusLabel","order_id","Invoice","useRouteMatch","invoice","setInvoice","getInvoiceByOrderId","payment_status","order","order_number","UserAccount","url","menu","header","body","order_items","UserOrders","pesanan","setPesanan","fetchPesanan","Logout","GuardRoute","rest","GuestOnlyRoute","App","useEffect","subscribe","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.314ae956.chunk.js","sourcesContent":["const menus = [\r\n  { icon: \"/images/menus/semua.png\", label: \"semua\", id: \"\" },\r\n  { icon: \"/images/menus/utama.png\", label: \"utama\", id: \"utama\" },\r\n  { icon: \"/images/menus/minuman.png\", label: \"minuman\", id: \"minuman\" },\r\n  { icon: \"/images/menus/snack.png\", label: \"snack\", id: \"snack\" },\r\n  { icon: \"/images/menus/pastry.png\", label: \"pastry\", id: \"pastry\" },\r\n];\r\n\r\nexport default menus;","import dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst config = {\r\n  api_host: process.env.REACT_APP_API_HOST,\r\n  site_title: process.env.REACT_APP_SITE_TITLE,\r\n  global_ongkir: process.env.REACT_APP_GLOBAL_ONGKIR,\r\n  owner: process.env.REACT_APP_OWNER,\r\n  contact: process.env.REACT_APP_CONTACT,\r\n  billing: {\r\n    account_no: process.env.REACT_APP_BILLING_NO,\r\n    bank_name: process.env.REACT_APP_BILLING_BANK,\r\n  },\r\n};\r\n\r\nexport { config };\r\n","import * as React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {config} from '../../config';\r\n\r\n\r\nconst StoreLogo = () => {\r\n    return (\r\n        <Link to=\"/\">\r\n            <div className=\"text-red-600 font-bold text-4xl\">\r\n                {config.site_title}\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default StoreLogo\r\n","import * as React from \"react\";\r\nimport StoreLogo from \"../StoreLogo/index\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Responsive, ButtonCircle } from \"upkit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FaUser from '@meronex/icons/fa/FaUser';\r\n\r\nconst TopBar = () => {\r\n  //dapatkan state auth\r\n  let auth = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <Responsive desktop={2} justify=\"between\" items=\"center\">\r\n      {/* Sisi kiri */}\r\n      <div>\r\n        <StoreLogo />\r\n      </div>\r\n\r\n      {/* Sisi kanan */}\r\n      <div className=\"mr-5 text-right\">\r\n        <Link to={auth?.user ? \"/account\" : \"/login\"}>\r\n          <div clasName=\"mr-2 inline-block text-red-600 font-bold\">\r\n            {auth?.user?.full_name}\r\n          </div>\r\n\r\n          <ButtonCircle icon={<FaUser />} />\r\n        </Link>\r\n      </div>\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","export const START_FETCHING_PRODUCT =\r\n'features/Products/START_FETCHING_PRODUCT';\r\nexport const ERROR_FETCHING_PRODUCT =\r\n'features/Products/ERROR_FETCHING_PRODUCT';\r\nexport const SUCCESS_FETCHING_PRODUCT =\r\n'features/Products/SUCCESS_FETCHING_PRODUCT';\r\nexport const SET_PAGE = 'features/Products/SET_PAGE';\r\nexport const SET_KEYWORD = 'features/Products/SET_KEYWORD';\r\nexport const SET_CATEGORY = 'features/Products/SET_CATEGORY';\r\nexport const SET_TAGS = 'features/Products/SET_TAGS';\r\nexport const NEXT_PAGE = 'features/Products/NEXT_PAGE';\r\nexport const PREV_PAGE = 'features/Products/PREV_PAGE';\r\nexport const TOGGLE_TAG = 'features/Products/TOGGLE_TAG';\r\n","import axios from \"axios\";\r\nimport { config } from \"../config\";\r\n\r\nconst getProducts = async (params) => {\r\n  return await axios.get(`${config.api_host}/api/products`, {\r\n    params,\r\n  });\r\n};\r\n\r\nexport { getProducts };\r\n","import debounce from \"debounce-promise\";\r\n\r\nimport {\r\n  SUCCESS_FETCHING_PRODUCT,\r\n  START_FETCHING_PRODUCT,\r\n  ERROR_FETCHING_PRODUCT,\r\n  SET_PAGE,\r\n  SET_KEYWORD,\r\n  SET_CATEGORY,\r\n  SET_TAGS,\r\n  TOGGLE_TAG,\r\n  PREV_PAGE,\r\n  NEXT_PAGE,\r\n} from \"./constants\";\r\n\r\nimport { getProducts } from \"../../api/product\";\r\nlet debouncedFetchProducts = debounce(getProducts, 1000);\r\n\r\nconst fetchProducts = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(startFetchingProducts());\r\n    //Menggunakan `getProducts` unutk mendapatkan data produk dari API\r\n    let perPage = getState().products.perPage || 9;\r\n    let currentPage = getState().products.currentPage || 1;\r\n    let tags = getState().products.tags || [];\r\n    let keyword = getState().products.keyword || \"\";\r\n    let category = getState().products.category || \"\";\r\n\r\n    const params = {\r\n      limit: perPage,\r\n      skip: (currentPage * perPage) - perPage,\r\n      q: keyword,\r\n      tags,\r\n      category,\r\n    };\r\n\r\n    try {\r\n      let {\r\n        data: { data, count } } = await debouncedFetchProducts(params);\r\n      dispatch(successFetchingProducts({ data, count }));\r\n    } catch (err) {\r\n      dispatch(errorFetchingProducts());\r\n    }\r\n  };\r\n};\r\n\r\nconst startFetchingProducts = () => {\r\n  return {\r\n    type: START_FETCHING_PRODUCT,\r\n  };\r\n};\r\n\r\nconst successFetchingProducts = (payload) => {\r\n  return {\r\n    type: SUCCESS_FETCHING_PRODUCT,\r\n    ...payload,\r\n  };\r\n};\r\n\r\nconst errorFetchingProducts = () => {\r\n  return {\r\n    type: ERROR_FETCHING_PRODUCT,\r\n  };\r\n};\r\n\r\nconst setPage = (number = 1) => {\r\n  return {\r\n    type: SET_PAGE,\r\n    currentPage: number,\r\n  };\r\n};\r\n\r\nconst setKeyword = (keyword) => {\r\n  return {\r\n    type: SET_KEYWORD,\r\n    keyword,\r\n  };\r\n};\r\n\r\nconst setCategory = (category) => {\r\n  return {\r\n    type: SET_CATEGORY,\r\n    category,\r\n  };\r\n};\r\n\r\nconst setTags = (tags) => {\r\n  return {\r\n    type: SET_TAGS,\r\n    tags,\r\n  };\r\n};\r\n\r\nconst clearTags = () => {\r\n  return setTags([]);\r\n};\r\n\r\nconst toggleTag\r\n = (tag) => {\r\n  return {\r\n    type: TOGGLE_TAG,\r\n    tag,\r\n  };\r\n};\r\n\r\nconst goToNextPage = () => {\r\n  return {\r\n    type: NEXT_PAGE,\r\n  };\r\n};\r\n\r\nconst goToPrevPage = () => {\r\n  return {\r\n    type: PREV_PAGE,\r\n  };\r\n};\r\n\r\nexport {\r\n  fetchProducts,\r\n  startFetchingProducts,\r\n  errorFetchingProducts,\r\n  successFetchingProducts,\r\n  debouncedFetchProducts,\r\n  setPage,\r\n  setKeyword,\r\n  setCategory,\r\n  setTags,\r\n  clearTags,\r\n  toggleTag,\r\n  goToNextPage,\r\n  goToPrevPage,\r\n};\r\n","export const tags = {\r\n  \"\": [],\r\n  utama: [\"burger\", \"pizza\", \"bread\"],\r\n  pastry: [\"cheese\", \"strawberry\", \"muffin\"],\r\n  snack: [\"fried\", \"bread\", \"cheese\", \"coffee\"],\r\n  minuman: [\"coffee\", \"tea\", \"hot\", \"cold\"],\r\n};\r\n","\r\n\r\nconst sumPrice = (items) => {\r\n    return items.reduce((acc, curr) => acc + (curr.price * curr.qty), 0);\r\n};\r\n\r\nexport { sumPrice };\r\n","const formatRupiah = (number) => {\r\n  if(isNaN(parseInt(number))) return '';\r\n\r\n  return new Intl.NumberFormat(\"id-ID\", {\r\n    maximumSignificantDigits: 2,\r\n    style: \"currency\",\r\n    currency: \"IDR\",\r\n  }).format(number);\r\n};\r\n\r\nexport { formatRupiah };\r\n","import * as React from \"react\";\r\nimport { arrayOf, string, shape, oneOfType, number, func } from \"prop-types\";\r\nimport { CardItem, Button, Text } from \"upkit\";\r\nimport { config } from \"../../config\";\r\nimport FaArrowRight from \"@meronex/icons/fa/FaArrowRight\";\r\nimport FaCartPlus from \"@meronex/icons/fa/FaCartPlus\";\r\nimport { sumPrice } from \"../../utils/index\";\r\nimport {formatRupiah} from \"../../utils/formatRupiah\"\r\n\r\nconst Cart = ({ items, onItemInc, onItemDec, onCheckout }) => {\r\n  let total = sumPrice(items);\r\n  return (\r\n    <div>\r\n      <div className=\"px-2 border-b mt-5 pb-5\">\r\n        <div className=\"text-3xl flex items-center text-red-700\">\r\n          <FaCartPlus />\r\n          <div className=\"ml-2\">Keranjang</div>\r\n        </div>\r\n        <Text as=\"h5\">Total : {formatRupiah(total)}</Text>\r\n        <Button\r\n          text=\"Checkout\"\r\n          fitContainer\r\n          iconAfter={<FaArrowRight />}\r\n          disabled={!items.length}\r\n          onClick={onCheckout}\r\n        />\r\n      </div>\r\n\r\n      {!items.length ? (\r\n        <div className=\"text-center text-sm text-red-900\">\r\n          Belum ada items di keranjang\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"p-2\">\r\n        {items.map((item, index) => {\r\n          return (\r\n            <div key={index} className=\"mb-2\">\r\n              <CardItem\r\n                imgUrl={`${config.api_host}/upload/${item.image_url}`}\r\n                name={item.name}\r\n                qty={item.qty}\r\n                color=\"orange\"\r\n                onInc={(_) => onItemInc(item)}\r\n                onDec={(_) => onItemDec(item)}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  items: arrayOf(\r\n    shape({\r\n      _id: string.isRquired,\r\n      name: string.isRequired,\r\n      qty: oneOfType([string, number]).isRequired,\r\n    })\r\n  ),\r\n  onItemInc: func,\r\n  onItemDec: func,\r\n  onCheckout: func,\r\n};\r\n\r\nexport default Cart;\r\n","export const ADD_ITEM = 'features/Cart/ADD_ITEM';\r\nexport const REMOVE_ITEM = 'features/Cart/REMOVE_ITEM';\r\nexport const CLEAR_ITEMS = 'features/Cart/CLEAR_ITEMS';\r\nexport const SET_ITEMS = 'features/Cart/SET_ITEMS';","import { ADD_ITEM, REMOVE_ITEM, CLEAR_ITEMS, SET_ITEMS } from \"./constants\";\r\n\r\nconst addItem = (item) => {\r\n  return {\r\n    type: ADD_ITEM,\r\n    item,\r\n  };\r\n};\r\n\r\nconst removeItem = (item) => {\r\n  return {\r\n    type: REMOVE_ITEM,\r\n    item,\r\n  };\r\n};\r\n\r\nconst clearItems = () => {\r\n  return {\r\n    type: CLEAR_ITEMS,\r\n  };\r\n};\r\n\r\nconst setItems = (items) => {\r\n  return {\r\n    type: SET_ITEMS,\r\n    items,\r\n  };\r\n};\r\n\r\nexport { addItem, removeItem, clearItems, setItems };\r\n","import * as React from \"react\";\r\nimport {\r\n  SideNav,\r\n  LayoutSidebar,\r\n  Responsive,\r\n  CardProduct,\r\n  Pagination,\r\n  InputText,\r\n  Pill,\r\n} from \"upkit\";\r\nimport { useSelector, useDispatch } from \"react-redux\"; //ini fungsinya untuk mengambil state\r\nimport menus from \"./menus\";\r\nimport TopBar from \"../../components/TopBar/index\";\r\nimport { config } from \"../../config\";\r\nimport {\r\n  fetchProducts,\r\n  setPage,\r\n  goToNextPage,\r\n  goToPrevPage,\r\n  setKeyword,\r\n  setCategory,\r\n  toggleTag,\r\n} from \"../../features/Products/actions\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport { tags } from \"./tags\";\r\nimport Cart from \"../../components/Cart/index\";\r\nimport { addItem, removeItem } from \"../../features/Cart/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  let dispatch = useDispatch();\r\n  let products = useSelector((state) => state.products);\r\n  let cart = useSelector((state) => state.cart);\r\n  let history = useHistory(); //posisinya harus disini\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchProducts());\r\n  }, [\r\n    dispatch,\r\n    products.currentPage,\r\n    products.keyword,\r\n    products.category,\r\n    products.tags,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <LayoutSidebar\r\n        sidebar={\r\n          <SideNav\r\n            items={menus}\r\n            verticalAlign=\"top\"\r\n            active={products.category}\r\n            onChange={(category) => dispatch(setCategory(category))}\r\n          />\r\n        }\r\n        content={\r\n          <div\r\n            className=\"md:flex md:flex-row-reverse w-full\r\n          mr-5 h-full min-h-screen\"\r\n          >\r\n            <div className=\"w-full md:w-3/4 pl-5 pb-10\">\r\n              <TopBar />\r\n              <div className=\"w-full text-center mb-10 mt-5\">\r\n                <InputText\r\n                  fullRound\r\n                  value={products.keyword}\r\n                  placeholder=\"cari makanan favoritmu...\"\r\n                  fitContainer\r\n                  onChange={(e) => dispatch(setKeyword(e.target.value))}\r\n                />\r\n                <div className=\"mb-5 pl-2 flex w-3/3 overflow-auto pb-5\">\r\n                  {tags[products.category].map((tag, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Pill\r\n                          text={tag}\r\n                          icon={tag.slice(0, 1).toUpperCase()}\r\n                          isActive={products.tags.includes(tag)}\r\n                          onClick={(_) => dispatch(toggleTag(tag))}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n\r\n              {products.status === \"process\" && !products.data.length ? (\r\n                <div className=\"flex justify-center\">\r\n                  <BounceLoader color=\"red\" />\r\n                </div>\r\n              ) : null}\r\n\r\n              <Responsive desktop={3} items=\"stretch\">\r\n                {products.data.map((product, index) => {\r\n                  return (\r\n                    <div key={index} className=\"p-2\">\r\n                      <CardProduct\r\n                        title={product.name}\r\n                        imgUrl={`${config.api_host}/upload/${product.image_url}`}\r\n                        price={product.price}\r\n                        onAddToCart={(_) => dispatch(addItem(product))}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Responsive>\r\n\r\n              <div className=\"text-center my-10\">\r\n                <Pagination\r\n                  totalItems={products.totalItems}\r\n                  page={products.currentPage}\r\n                  perPage={products.perPage}\r\n                  onNext={(_) => dispatch(goToNextPage())}\r\n                  onChange={(page) => dispatch(setPage(page))}\r\n                  onPrev={(_) => dispatch(goToPrevPage())}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"w-full md:w-1/4 h-full shadow-lg border-r border-white bg-gray-100\">\r\n              <Cart\r\n                items={cart}\r\n                onItemInc={(item) => dispatch(addItem(item))}\r\n                onItemDec={(item) => dispatch(removeItem(item))}\r\n                onCheckout={(_) => history.push(\"/checkout\")}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n        sidebarSize={80}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const USER_LOGIN = 'features/Auth/USER_LOGIN';\r\nexport const USER_LOGOUT = 'features/Auth/USER_LOGOUT';","import { USER_LOGIN, USER_LOGOUT } from \"./constants\";\r\nlet initialState = localStorage.getItem(\"auth\")\r\n  ? JSON.parse(localStorage.getItem(\"auth\"))\r\n  : { user: null, token: null };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    //Logika untuk LOGIN\r\n    case USER_LOGIN:\r\n      return { user: action.user, token: action.token };\r\n\r\n    //Logika untuk LOGOUT\r\n    case USER_LOGOUT:\r\n      return { user: null, token: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// import { Suspense } from \"react\";\r\n// import { Switch } from \"react-router-dom\";\r\nimport {\r\n  START_FETCHING_PRODUCT,\r\n  ERROR_FETCHING_PRODUCT,\r\n  SUCCESS_FETCHING_PRODUCT,\r\n  SET_PAGE,\r\n  SET_CATEGORY,\r\n  SET_KEYWORD,\r\n  SET_TAGS,\r\n  NEXT_PAGE,\r\n  PREV_PAGE,\r\n  TOGGLE_TAG,\r\n} from \"./constants\";\r\nconst statuslist = {\r\n  idle: \"idle\",\r\n  process: \"process\",\r\n  success: \"success\",\r\n  error: \"error\",\r\n};\r\n\r\nconst initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalItems: -1,\r\n  perPage: 10,\r\n  keyword: \"\",\r\n  category: \"\",\r\n  tags: [],\r\n  status: statuslist.idle,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case START_FETCHING_PRODUCT:\r\n      return { ...state, status: statuslist.process };\r\n\r\n    case SUCCESS_FETCHING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        status: statuslist.success,\r\n        data: action.data,\r\n        totalItems: action.count,\r\n      };\r\n\r\n    case ERROR_FETCHING_PRODUCT:\r\n      return { ...state, status: statuslist.error };\r\n\r\n    case SET_PAGE:\r\n      return { ...state, currentPage: action.currentPage };\r\n\r\n    case SET_KEYWORD:\r\n      return { ...state, keyword: action.keyword, category: \"\", tags: [] };\r\n\r\n    case SET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentPage: 1,\r\n        tags: [],\r\n        category: action.category,\r\n        keyword: \"\",\r\n      };\r\n\r\n    case SET_TAGS:\r\n      return { ...state, tags: action.tags };\r\n\r\n    case TOGGLE_TAG:\r\n      if (!state.tags.includes(action.tag)) {\r\n        return { ...state, currentPage: 1, tags: [...state.tags, action.tag] };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          currentPage: 1,\r\n          tags: state.tags.filter((tag) => tag !== action.tag),\r\n        };\r\n      }\r\n\r\n    case NEXT_PAGE:\r\n      return { ...state, currentPage: state.currentPage + 1 };\r\n\r\n    case PREV_PAGE:\r\n      return { ...state, currentPage: state.currentPage - 1 };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { ADD_ITEM, REMOVE_ITEM, CLEAR_ITEMS, SET_ITEMS } from \"./constants\";\r\nconst initialState = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_ITEM:\r\n      if (state.find((item) => item._id === action.item._id)) {\r\n        return state.map((item) => ({\r\n          ...item,\r\n          qty: item._id === action.item._id ? item.qty + 1 : item.qty,\r\n        }));\r\n      } else {\r\n        return [...state, { ...action.item, qty: 1 }];\r\n      }\r\n\r\n    case REMOVE_ITEM:\r\n      return state\r\n        .map((item) => ({\r\n          ...item,\r\n          qty: item._id === action.item._id ? item.qty - 1 : item.qty,\r\n        }))\r\n        .filter((item) => item.qty > 0);\r\n\r\n    case CLEAR_ITEMS:\r\n      return [];\r\n\r\n    case SET_ITEMS:\r\n      return action.items;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","//import redux-thunk middleware\r\nimport { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from '../features/Auth/reducer';\r\nimport productReducer from '../features/Products/reducer';\r\nimport cartReducer from '../features/Cart/reducer'\r\n\r\n//Buat composer enhacer untuk menghubungkan dengan Chrome Devtools Redux\r\nconst composerEnhacer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n//Gabung reducer, untuk sementara kosong, karena kita belum membuat reducer\r\nconst rootReducers = combineReducers({\r\n    auth: authReducer,\r\n\r\n    //product reducer sebagai _state_ `products`\r\n    products: productReducer,\r\n    cart: cartReducer\r\n});\r\n\r\n//Buat store, dan gunakan composerEnhacer + middleware thunk\r\nconst store = createStore(rootReducers, composerEnhacer(applyMiddleware(thunk)));\r\n\r\n//Export Store\r\nexport default store;","import store from \"./store\";\r\nimport { saveCart } from \"../api/cart\";\r\n\r\nlet currentAuth; //Variabel untuk menyimpan Auth saat ini\r\nlet currentCart;\r\n\r\n//Fungsi Listener\r\nfunction listener() {\r\n  let previousAuth = currentAuth;\r\n  let previousCart = currentCart;\r\n\r\n  currentAuth = store.getState().auth;\r\n  currentCart = store.getState().cart;\r\n\r\n  let { token } = currentAuth;\r\n\r\n  if (currentAuth !== previousAuth) {\r\n    //berarti ada perubahan state antara sebelum da sesudah login\r\n    localStorage.setItem(\"auth\", JSON.stringify(currentAuth));\r\n    saveCart(token, currentCart);\r\n  }\r\n\r\n  if (currentCart !== previousCart) {\r\n    localStorage.setItem(\"cart\", JSON.stringify(currentCart));\r\n    saveCart(token, currentCart)\r\n  }\r\n}\r\n\r\n//Buat fungsi Listen\r\nfunction listen() {\r\n  store.subscribe(listener);\r\n}\r\n\r\nexport { listen }; //tanda { } itu berarti kita mengexport function\r\n","import axios from \"axios\";\r\nimport store from \"../app/store\";\r\nimport { config } from \"../config\";\r\nimport {setItems} from '../features/Cart/actions'\r\n\r\nconst saveCart = async (token, cart) => {\r\n  //token si user yang login dan data cart untuk di simpan database\r\n  return await axios.put(\r\n    `${config.api_host}/api/carts`,\r\n    { items: cart },\r\n    {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst getCart = async () => {\r\n  let { token } = localStorage.getItem(\"auth\")\r\n    ? JSON.parse(localStorage.getItem(\"auth\"))\r\n    : {};\r\n\r\n  if (!token) return;\r\n  let { data } = await axios.get(`${config.api_host}/api/carts`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!data.error) {\r\n\r\n    store.dispatch(setItems(data));\r\n  }\r\n};\r\n\r\nexport { saveCart, getCart };\r\n","const rules = {\r\n  full_name: {\r\n    required: { value: true, message: \"Nama lengkap harus diisi.\" },\r\n    maxLength: {\r\n      value: 500,\r\n      message: \"Panjang nama lengkap maksimal 500 karakter.\",\r\n    },\r\n  },\r\n  email: {\r\n    required: { value: true, message: \"Email harus diisi.\" },\r\n    maxLength: { value: 255, message: \"Panjang email maksimal 255 karakter.\" },\r\n    pattern: {\r\n      value: /^([\\w-.]+@([\\w-]+.)+[\\w-]{2,4})?$/,\r\n      message: \"Email tidak valid\",\r\n    },\r\n  },\r\n  password: {\r\n    required: { value: true, message: \"Password harus diisi.\" },\r\n    maxLength: {\r\n      value: 255,\r\n      message: \"Panjang password maksimal 255 karakter.\",\r\n    },\r\n  },\r\n  password_confirmation: {\r\n    required: { value: true, message: \"Konfirmasi password harus diisi.\" },\r\n  },\r\n};\r\n\r\nexport { rules };\r\n","import axios from \"axios\";\r\nimport {config} from \"../config\";\r\n\r\n//Pendaftaran user Baru dalam arrow function\r\nconst registerUser = async (data) => {\r\n  return await axios.post(`${config.api_host}/auth/register`, data); //masukin hasilnya berupa full_name, email dan lain sebagainya ke data\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  return await axios.post(`${config.api_host}/auth/login`, { email, password });\r\n};\r\n\r\nconst logout = async () => {\r\n  let { token } = localStorage.getItem(\"auth\")\r\n    ? JSON.parse(localStorage.getItem(\"auth\"))\r\n    : {};\r\n\r\n  return await axios\r\n    .post(`${config.api_host}/auth/logout`, null, {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      localStorage.removeItem(\"auth\");\r\n      return response;\r\n    });\r\n};\r\n\r\nexport{ registerUser, login, logout };\r\n","import * as React from \"react\";\r\nimport {\r\n  LayoutOne,\r\n  Card,\r\n  FormControl,\r\n  InputText,\r\n  InputPassword,\r\n  Button,\r\n} from \"upkit\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { rules } from \"./validation\";\r\n//import { rule } from \"postcss\";\r\nimport { registerUser } from \"../../api/auth\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport StoreLogo from '../../components/StoreLogo/index'\r\n\r\nconst statuslist = {\r\n  idle: \"idle\",\r\n  process: \"process\",\r\n  success: \"success\",\r\n  error: \"error\",\r\n};\r\n\r\nconst Register = () => {\r\n  let { register, handleSubmit, errors, setError } = useForm();\r\n  let [status, setStatus] = React.useState(statuslist.idle);\r\n  let history = useHistory();\r\n  const onSubmit = async (formData) => {\r\n    let { password, password_confirmation } = formData;\r\n\r\n    //cek password vs password_confirmation\r\n    if (password !== password_confirmation) {\r\n      return setError(\"password_confirmation\", {\r\n        type: \"equality\",\r\n        message: \"Konfirmasi Password harus sama dengan Password\",\r\n      });\r\n    }\r\n\r\n    setStatus(statuslist.process);\r\n\r\n    //alert(JSON.stringify(formData));\r\n    let { data } = await registerUser(formData);\r\n\r\n    //Cek apakah ada error dari respon server\r\n    if (data.error) {\r\n      //Dapatkan yang error di field yang mana\r\n      let fields = Object.keys(data.fields);\r\n\r\n      //Untuk masing-masing field kita terapkan error dan tangkap pesan errornya\r\n      fields.forEach((field) => {\r\n        setError(field, {\r\n          type: \"server\",\r\n          message: data.fields[field]?.properties?.message,\r\n        });\r\n      });\r\n      setStatus(statuslist.error);\r\n      return;\r\n    }\r\n\r\n    //Kondisi register sukses\r\n    setStatus(statuslist.success);\r\n    history.push(\"/register/berhasil\");\r\n  };\r\n  return (\r\n    <LayoutOne size=\"small\">\r\n      {/* bungkus form register di dalam card terlebih dahulu supaya lebih rapih*/}\r\n      <Card color=\"white\">\r\n        <div className=\"text-center mb-5\">\r\n          <StoreLogo />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormControl errorMessage={errors.full_name?.message}>\r\n            <InputText\r\n              name=\"full_name\"\r\n              placeholder=\"Nama Lengkap\"\r\n              fitContainer\r\n              ref={register(rules.full_name)}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl errorMessage={errors.email?.message}>\r\n            <InputText\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              fitContainer\r\n              ref={register(rules.email)}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl errorMessage={errors.password?.message}>\r\n            <InputPassword\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              fitContainer\r\n              ref={register(rules.password)}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl errorMessage={errors.password_confirmation?.message}>\r\n            <InputPassword\r\n              name=\"password_confirmation\"\r\n              placeholder=\"Konfirmasi Password\"\r\n              fitContainer\r\n              ref={register(rules.password_confirmation)}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            size=\"large\"\r\n            fitContainer\r\n            disabled={status === statuslist.process}\r\n          >\r\n            {status === statuslist.process ? \"Sedang Memproses\" : \"Mendaftar\"}\r\n          </Button>\r\n        </form>\r\n        <div className=\"text-center mt-2\">\r\n          Sudah punya akun?{\" \"}\r\n          <Link to=\"/login\">\r\n            {\" \"}\r\n            <b> Masuk Sekarang. </b>{\" \"}\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </LayoutOne>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import * as React from 'react';\r\nimport {LayoutOne, Card, Text, Button} from 'upkit';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst RegisterSuccess = () => {\r\n    return (\r\n        <LayoutOne size=\"small\">\r\n            <Card color=\"grey\">\r\n                <div className=\"text-center\">\r\n                    <Text as=\"h3\">\r\n                        Pendaftaran Berhasil\r\n                    </Text>\r\n\r\n                    <Text>\r\n                        Silahkan masuk ke Aplikasi\r\n                    </Text>\r\n\r\n                    <br />\r\n                    <Link to=\"/login\"> \r\n                        <Button fitContainer>\r\n                            Login\r\n                        </Button>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </Card>\r\n        </LayoutOne>\r\n    )\r\n}\r\n\r\nexport default RegisterSuccess\r\n","import {USER_LOGIN, USER_LOGOUT} from \"./constants\";\r\n\r\n//Action userLogin\r\nexport function userLogin(user, token) {\r\n    return{\r\n        type: USER_LOGIN,\r\n        user,\r\n        token\r\n    }\r\n}\r\n\r\n//Action userLogout\r\nexport function userLogout(user, token){\r\n    return{\r\n        type: USER_LOGOUT,\r\n    }\r\n}","const rules = {\r\n  email: {\r\n    required: { value: true, message: \"Email tidak boleh kosong\" },\r\n    maxLength: { value: 255, message: \"Panjang email maksimal 255 karakter\" },\r\n  },\r\n  password: {\r\n    required: { value: true, message: \"Password tidak boleh kosong.\" },\r\n    maxLength: {\r\n      value: 255,\r\n      message: \"Panjang password maksimal 255 karakter.\",\r\n    },\r\n  },\r\n};\r\n\r\nexport { rules };\r\n","import * as React from \"react\";\r\nimport {\r\n  InputText,\r\n  InputPassword,\r\n  Button,\r\n  FormControl,\r\n  Card,\r\n  LayoutOne,\r\n} from \"upkit\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport StoreLogo from \"../../components/StoreLogo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userLogin } from \"../../features/Auth/actions\";\r\nimport { rules } from \"./validation\";\r\nimport { login } from \"../../api/auth\";\r\nconst statuslist = {\r\n  idle: \"idle\",\r\n  process: \"process\",\r\n  success: \"success\",\r\n  error: \"error\",\r\n};\r\nexport default function Login() {\r\n  const { register, handleSubmit, errors, setError } = useForm();\r\n  const [status, setStatus] = React.useState(statuslist.idle);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const onSubmit = async ({ email, password }) => {\r\n    setStatus(statuslist.process);\r\n    let { data } = await login(email, password);\r\n    if (data.error) {\r\n      setError(\"password\", {\r\n        type: \"invalidCredential\",\r\n        message: data.message,\r\n      });\r\n      setStatus(statuslist.error);\r\n    } else {\r\n      let { user, token } = data;\r\n      dispatch(userLogin(user, token));\r\n      history.push(\"/\");\r\n    }\r\n    setStatus(statuslist.success);\r\n  };\r\n  return (\r\n    <LayoutOne size=\"small\">\r\n      <br />\r\n      <Card color=\"white\">\r\n        <div className=\"text-center mb-5\">\r\n          <StoreLogo />\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormControl errorMessage={errors.email?.message}>\r\n            <InputText\r\n              placeholder=\"email\"\r\n              fitContainer\r\n              name=\"email\"\r\n              ref={register(rules.email)}\r\n            />\r\n          </FormControl>\r\n          <FormControl errorMessage={errors.password?.message}>\r\n            <InputPassword\r\n              placeholder=\"password\"\r\n              name=\"password\"\r\n              fitContainer\r\n              ref={register(rules.password)}\r\n            />\r\n          </FormControl>\r\n          <Button fitContainer size=\"large\" disabled={status === \"process\"}>\r\n            Login\r\n          </Button>\r\n        </form>\r\n\r\n        <div className=\"text-center mt-2\">\r\n          Belum punya akun?{\" \"}\r\n          <Link to=\"/register\">\r\n            <b>Daftar sekarang.</b>\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </LayoutOne>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport { config } from \"../../config\";\r\nimport { oneOf, number, oneOfType, string, func, shape } from \"prop-types\";\r\nimport { Select } from \"upkit\";\r\n\r\nconst SelectWilayah = ({ tingkat, kodeInduk, onChange, value }) => {\r\n  //definisikan state lokal\r\n  let [data, setData] = React.useState([]);\r\n  let [isFetching, setIsFetching] = React.useState(false);\r\n\r\n  //dapatkan data dari web API\r\n  React.useEffect(() => {\r\n    setIsFetching(true);\r\n\r\n    axios\r\n      .get(\r\n        `${config.api_host}/api/wilayah/${tingkat}?kode_induk=${kodeInduk}`\r\n      )\r\n      .then(({ data }) => setData(data))\r\n      .finally((_) => setIsFetching(false));\r\n  }, [kodeInduk, tingkat]);\r\n\r\n  return (\r\n    <Select\r\n      options={data.map((wilayah) => ({\r\n        label: wilayah.nama,\r\n        value: wilayah.kode,\r\n      }))}\r\n      onChange={onChange}\r\n      value={value}\r\n      isLoading = {isFetching} //isFetching ini akan bernilai tru jika sedang mengambil data dari WEB API\r\n      isDisabled = {isFetching || !data.length}\r\n    />\r\n  );\r\n\r\n};\r\n\r\n//set nilai default dari select\r\nSelectWilayah.defaultProps = {\r\n    tingkat: 'provinsi'\r\n}\r\n\r\n//definisi propTypes\r\nSelectWilayah.propTypes = {\r\n  tingkat: oneOf([\"provinsi\", \"kabupaten\", \"kecamatan\", \"desa\"]),\r\n  kodeInduk: oneOfType([number, string]),\r\n  onChange: func,\r\n  value: shape({label: string, value: oneOfType([string, number])})\r\n};\r\n\r\nexport default SelectWilayah;\r\n","import axios from \"axios\";\r\nimport { config } from \"../config\";\r\n\r\nconst getAddress = async (params) => {\r\n  let { token } = localStorage.getItem(\"auth\")\r\n    ? JSON.parse(localStorage.getItem(\"auth\"))\r\n    : {};\r\n\r\n  return await axios.get(`${config.api_host}/api/address`, {\r\n    params: {\r\n      limit: params.limit,\r\n      skip: params.page * params.limit - params.limit,\r\n    },\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nconst createAddress = async (payload) => {\r\n  let { token } = localStorage.getItem(\"auth\")\r\n    ? JSON.parse(localStorage.getItem(\"auth\"))\r\n    : {};\r\n\r\n  return await axios.post(`${config.api_host}/api/address`, payload, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport { getAddress, createAddress };\r\n","const rules = {\r\n  nama_alamat: {\r\n    required: { value: true, message: \"Nama alamat tidak boleh kosong.\" },\r\n    maxLength: {\r\n      value: 500,\r\n      message: \"Panjang nama alamat maksimal 500 karakter\",\r\n    },\r\n    minLength: { value: 5, message: \"Panjang nama alamat minimal 5 karakter\" },\r\n  },\r\n  provinsi: {\r\n    required: { value: true, message: \"Provinsi harus dipilih.\" },\r\n  },\r\n  kabupaten: {\r\n    required: { value: true, message: \"Kabupaten harus dipilih.\" },\r\n  },\r\n  kecamatan: {\r\n    required: { value: true, message: \"Kecamatan harus dipilih.\" },\r\n  },\r\n  kelurahan: {\r\n    required: { value: true, message: \"Kelurahan harus dipilih.\" },\r\n  },\r\n  detail_alamat: {\r\n    required: { value: true, message: \"Detail alamat harus diisi\" },\r\n    maxLength: {\r\n      value: 1000,\r\n      message: \"Panjang detail alamat maksimal 1000 karakter\",\r\n    },\r\n  },\r\n};\r\nexport { rules };\r\n","import * as React from \"react\";\r\nimport { LayoutOne, InputText, FormControl, Textarea, Button } from \"upkit\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport TopBar from \"../../components/TopBar/index\";\r\nimport SelectWilayah from \"../../components/SelectWilayah/index\";\r\nimport { createAddress } from \"../../api/address\";\r\nimport { rules } from \"./validation\";\r\n\r\nconst UserAddressAdd = () => {\r\n  let history = useHistory();\r\n  let {\r\n    handleSubmit,\r\n    register,\r\n    errors,\r\n    setValue,\r\n    watch,\r\n    getValues,\r\n  } = useForm();\r\n\r\n  let allFields = watch();\r\n\r\n  React.useEffect(() => {\r\n    register({ name: \"provinsi\" }, rules.provinsi);\r\n    register({ name: \"kabupaten\" }, rules.kabupaten);\r\n    register({ name: \"kecamatan\" }, rules.kecamatan);\r\n    register({ name: \"kelurahan\" }, rules.kelurahan);\r\n  }, [register]);\r\n\r\n  //saat ada perubahan di provinsi\r\n  React.useEffect(() => {\r\n    setValue(\"kabupaten\", null);\r\n    setValue(\"kecamatan\", null);\r\n    setValue(\"kelurahan\", null);\r\n  }, [allFields.provinsi, setValue]);\r\n\r\n  //saat ada perubahan di kabupaten\r\n  React.useEffect(() => {\r\n    setValue(\"kecamatan\", null);\r\n    setValue(\"kelurahan\", null);\r\n  }, [allFields.kabupaten, setValue]);\r\n\r\n  //saat ada perubahan di kecamatan\r\n  React.useEffect(() => {\r\n    setValue(\"kelurahan\", null);\r\n  }, [allFields.kecamatan, setValue]);\r\n\r\n  //Ketika field sudah diisi maka kita akan setValuenya terlebih dahulu\r\n  const updateValue = (field, value) => {\r\n    setValue(field, value, { shouldValidate: true, shouldDirty: true });\r\n  };\r\n\r\n  //Fungsi untuk memproses proses submit\r\n  const onSubmit = async (formData) => {\r\n      let payload = {\r\n          nama: formData.nama_alamat,\r\n          detail: formData.detail_alamat,\r\n          provinsi: formData.provinsi.label,\r\n          kabupaten: formData.kabupaten.label,\r\n          kecamatan: formData.kecamatan.label,\r\n          kelurahan: formData.kelurahan.label\r\n      }\r\n\r\n      let {data} = await createAddress(payload);\r\n      if(data.error) return //hentikan proses\r\n\r\n      history.push('/alamat-pengiriman');\r\n  };\r\n  return (\r\n    <LayoutOne>\r\n      <TopBar />\r\n      <br />\r\n      {/* div pembungkus utama */}\r\n      <div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <FormControl\r\n            label=\"Nama alamat\"\r\n            errorMessage={errors.nama_alamat?.message}\r\n            color=\"black\"\r\n          >\r\n            <InputText\r\n              placeholder=\"Nama alamat\"\r\n              fitContainer\r\n              name=\"nama_alamat\"\r\n              ref={register(rules.nama_alamat)}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl label=\"Provinsi\" errorMessage={errors.provinsi?.message} color=\"black\"\r\n          >\r\n            <SelectWilayah\r\n              onChange={(option) => updateValue(\"provinsi\", option)}\r\n              tingkat=\"provinsi\"\r\n              value={getValues().provinsi}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            label=\"Kabupaten/kota\"\r\n            errorMessage={errors.kabupaten?.message}\r\n            color=\"black\"\r\n          >\r\n            <SelectWilayah\r\n              tingkat=\"kabupaten\"\r\n              kodeInduk={getValues().provinsi?.value}\r\n              onChange={(option) => updateValue(\"kabupaten\", option)}\r\n              value={getValues().kabupaten}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            label=\"Kecamatan\"\r\n            errorMessage={errors.kecamatan?.message}\r\n            color=\"black\"\r\n          >\r\n            <SelectWilayah\r\n              tingkat=\"kecamatan\"\r\n              kodeInduk={getValues().kabupaten?.value}\r\n              onChange={(option) => updateValue(\"kecamatan\", option)}\r\n              value={getValues().kecamatan}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            label=\"Kelurahan\"\r\n            errorMessage={errors.kelurahan?.message}\r\n            color=\"black\"\r\n          >\r\n            <SelectWilayah\r\n              tingkat=\"desa\"\r\n              kodeInduk={getValues().kecamatan?.value}\r\n              onChange={(option) => updateValue(\"kelurahan\", option)}\r\n              value={getValues().kelurahan}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            label=\"Detail alamat\"\r\n            errorMessage={errors.detail_alamat?.message}\r\n            color=\"black\"\r\n          >\r\n            <Textarea\r\n              placeholder=\"Detail alamat\"\r\n              fitContainer\r\n              name=\"detail_alamat\"\r\n              ref={register(rules.detail_alamat)}\r\n            />\r\n          </FormControl>\r\n          <Button fitContainer>Simpan</Button>\r\n        </form>\r\n      </div>\r\n    </LayoutOne>\r\n  );\r\n};\r\n\r\nexport default UserAddressAdd;\r\n","import * as React from \"react\";\r\nimport { getAddress } from \"../api/address\";\r\n\r\nconst statusList = {\r\n  idle: \"idle\",\r\n  process: \"process\",\r\n  success: \"success\",\r\n  error: \"error\",\r\n};\r\n\r\nconst useAddressData = () => {\r\n  let [data, setData] = React.useState([]);\r\n  let [count, setCount] = React.useState(0);\r\n  let [status, setStatus] = React.useState(statusList.idle);\r\n  let [page, setPage] = React.useState(1);\r\n  let [limit, setLimit] = React.useState(10);\r\n\r\n  let fetchAddress = React.useCallback(async function () {\r\n    //Ubah Status Menjadi Proses\r\n    setStatus(statusList.process);\r\n\r\n    //Request data Alamat pengiriman dari WEB API\r\n    let {\r\n      data: { data, count, error },\r\n    } = await getAddress({ page, limit });\r\n\r\n    //cek error dari pemanggilan data\r\n    if (error) {\r\n      setStatus(statusList.error);\r\n      return;\r\n    }\r\n\r\n    //jika data berhasil didapat\r\n    setStatus(statusList.success);\r\n    setData(data);\r\n    setCount(count);\r\n  }, [page, limit]);\r\n\r\n  React.useEffect(() => {\r\n    fetchAddress();\r\n  }, [fetchAddress]);\r\n\r\n  return {\r\n      data,\r\n      count,\r\n      status,\r\n      page,\r\n      limit,\r\n      setPage,\r\n      setLimit\r\n  }\r\n};\r\n\r\nexport { useAddressData };\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LayoutOne, Table, Text, Button } from \"upkit\";\r\n\r\nimport TopBar from \"../../components/TopBar/index\";\r\nimport { useAddressData } from \"../../hooks/address\";\r\n\r\nconst columns = [\r\n  { Header: \"Nama\", accessor: \"nama\" },\r\n  {\r\n    Header: \"Detail\",\r\n    accessor: (alamat) => {\r\n      return (\r\n        <div>\r\n          {alamat.provinsi}, {alamat.kabupatem}, {alamat.kecamatan},{\" \"}\r\n          {alamat.kelurahan}\r\n          <br />\r\n          {alamat.detail}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst UserAddress = () => {\r\n  let { data, limit, page, status, count, setPage } = useAddressData();\r\n\r\n  return (\r\n    <LayoutOne size=\"large\">\r\n      <div>\r\n        <TopBar />\r\n        <Text as=\"h3\">Alamat Pengiriman</Text>\r\n        <br />\r\n\r\n        <div>\r\n          <Link to=\"alamat-pengiriman/tambah\">\r\n            <Button>Tambah Alamat Baru</Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n\r\n          <Table\r\n            items={data}\r\n            columns={columns}\r\n            totalItems={count}\r\n            page={page}\r\n            isLoading={status === \"process\"}\r\n            perPage={limit}\r\n            onPageChange={(page) => setPage(page)}\r\n          />\r\n        </div>\r\n        \r\n        {status === \"success\" && !data.length ? (\r\n          <div className=\"text-center p-10\">\r\n            Kamu belum menambahkan alamat pengiriman. <br />\r\n            <Link to=\"alamat-pengiriman/tambah\">\r\n              <Button>Tambah alamat baru</Button>\r\n            </Link>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </LayoutOne>\r\n  );\r\n};\r\n\r\nexport default UserAddress;\r\n","// import * as axios from \"axios\";\r\n// import { config } from \"../config\";\r\n\r\n// const getOrders = async (params) => {\r\n//   let { token } = localStorage.getItem(\"auth\")\r\n//     ? JSON.parse(localStorage.getItem(\"auth\"))\r\n//     : {};\r\n\r\n//   let { limit, page } = params;\r\n//   let skip = page * limit - limit;\r\n\r\n//   return await axios.get(`${config.api_host}/api/orders`, {\r\n//     params: {\r\n//       skip,\r\n//       limit,\r\n//     },\r\n//     headers: {\r\n//       authorization: `Bearer ${token}`,\r\n//     },\r\n//   });\r\n// };\r\n\r\n// const createOrder = async (payload) => {\r\n//   let { token } = localStorage.getItem(\"auth\")\r\n//     ? JSON.parse(localStorage.getItem(\"auth\"))\r\n//     : {};\r\n//   return await axios.post(`${config.api_host}/api/orders`, payload, {\r\n//     headers: {\r\n//       authorization: `Bearer ${token}`,\r\n//     },\r\n//   });\r\n// };\r\n\r\n// export { getOrders, createOrder };\r\n\r\nimport * as axios from \"axios\";\r\nimport { config } from \"../config\";\r\n\r\nexport async function createOrder(payload) {\r\n  let { token } = localStorage.getItem(\"auth\")\r\n    ? JSON.parse(localStorage.getItem(\"auth\"))\r\n    : {};\r\n\r\n  return( await axios.post(`${config.api_host}/api/orders`, payload, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }))\r\n}\r\n\r\nexport async function getOrders(params) {\r\n  let { token } = localStorage.getItem(\"auth\")\r\n    ? JSON.parse(localStorage.getItem(\"auth\"))\r\n    : {};\r\n  let { limit, page } = params;\r\n  let skip = page * limit - limit;\r\n  return await axios.get(`${config.api_host}/api/orders`, {\r\n    params: {\r\n      skip,\r\n      limit,\r\n    },\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n","\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\n \r\nimport { LayoutOne, Text, Steps, Table, Button, Responsive } from \"upkit\";\r\nimport FaCartPlus from '@meronex/icons/fa/FaCartPlus';\r\nimport FaAddressCard from '@meronex/icons/fa/FaAddressCard';\r\nimport FaInfoCircle from '@meronex/icons/fa/FaInfoCircle';\r\nimport FaArrowRight from '@meronex/icons/fa/FaArrowRight';\r\nimport FaArrowLeft from '@meronex/icons/fa/FaArrowLeft';\r\nimport FaRegCheckCircle from '@meronex/icons/fa/FaRegCheckCircle';\r\n \r\n \r\nimport { config } from '../../config';\r\nimport TopBar from '../../components/TopBar';\r\nimport { sumPrice } from \"../../utils/index\";\r\nimport { formatRupiah } from '../../utils/formatRupiah';\r\nimport { useAddressData } from '../../hooks/address';\r\nimport { createOrder } from \"../../api/order\";\r\nimport { clearItems } from \"../../features/Cart/actions\";\r\n \r\nconst IconWrapper = ({ children }) => {\r\n    return <div className=\"text-3xl flex justify-center\">\r\n        {children}\r\n    </div>\r\n}\r\n \r\nconst steps = [\r\n    {\r\n        label: 'Item',\r\n        icon: <IconWrapper><FaCartPlus /></IconWrapper>\r\n    },\r\n    {\r\n        label: 'Alamat',\r\n        icon: <IconWrapper><FaAddressCard /></IconWrapper>\r\n    },\r\n    {\r\n        label: 'Konfirmasi',\r\n        icon: <IconWrapper><FaInfoCircle /></IconWrapper>\r\n    }\r\n];\r\n \r\nconst columns = [\r\n    {\r\n        Header: 'Nama produk',\r\n        accessor: item => <div className=\"flex items-center\">\r\n            <img src={`${config.api_host}/upload/${item.image_url}`} width={48} alt={item.name} />\r\n            {item.name}\r\n        </div>\r\n    },\r\n    {\r\n        Header: 'Jumlah',\r\n        accessor: 'qty'\r\n    },\r\n    {\r\n        Header: 'Harga satuan',\r\n        id: 'price',\r\n        accessor: item => <span> @ {formatRupiah(item.price)} </span>\r\n    },\r\n    {\r\n        Header: 'Harga total',\r\n        id: 'subtotal',\r\n        accessor: item => {\r\n            return <div>\r\n                {formatRupiah(item.price * item.qty)}\r\n            </div>\r\n        }\r\n    }\r\n];\r\n \r\nconst addressColumns = [\r\n    {\r\n        Header: 'Nama alamat',\r\n        accessor: alamat => {\r\n            return <div>\r\n                {alamat.nama} <br />\r\n                <small>\r\n                    {alamat.provinsi}, {alamat.kabupaten}, {alamat.kecamatan}, {alamat.kelurahan} <br />\r\n                    {alamat.detail}\r\n                </small>\r\n            </div>\r\n        }\r\n    }\r\n];\r\n \r\nexport default function Checkout() {\r\n \r\n    let [activeStep, setActiveStep] = React.useState(0);\r\n    let cart = useSelector(state => state.cart);\r\n    let [selectedAddress, setSelectedAddress] = React.useState(null);\r\n \r\n    let {\r\n        data,\r\n        status,\r\n        limit,\r\n        page,\r\n        count,\r\n        setPage\r\n    } = useAddressData();\r\n \r\n \r\n    let history = useHistory();\r\n    let dispatch = useDispatch();\r\n \r\n    async function handleCreateOrder() {\r\n        let payload = {\r\n            delivery_fee: config.global_ongkir,\r\n            delivery_address: selectedAddress._id,\r\n        }\r\n        // kirimkan `payload` ke Web API untuk membuat order baru\r\n        let { data } = await createOrder(payload);\r\n \r\n        if (data?.error) return;\r\n \r\n        // redirect ke halaman invoice\r\n        history.push(`/invoice/${data._id}`);\r\n \r\n        // hapus semua item di keranjang belanja\r\n        dispatch(clearItems());\r\n \r\n    }\r\n \r\n \r\n    if (!cart.length) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n \r\n    return <LayoutOne>\r\n        <TopBar />\r\n        <Text as=\"h3\"> Checkout </Text>\r\n \r\n        <Steps\r\n            steps={steps}\r\n            active={activeStep}\r\n        />\r\n        <br />\r\n        {activeStep === 0 ?\r\n            <div>\r\n                <br /> <br />\r\n                <Table\r\n                    items={cart}\r\n                    columns={columns}\r\n                    perPage={cart.length}\r\n                    showPagination={false}\r\n                />\r\n \r\n \r\n                <br />\r\n                <div className=\"text-right\">\r\n                    <Text as=\"h4\">\r\n                        Subtotal: {formatRupiah(sumPrice(cart))}\r\n                    </Text>\r\n \r\n                    <br />\r\n                    <Button\r\n                        onClick={_ => setActiveStep(activeStep + 1)}\r\n                        color=\"red\"\r\n                        iconAfter={<FaArrowRight />}\r\n                    > Selanjutnya </Button>\r\n                </div>\r\n \r\n            </div>\r\n            : null}\r\n \r\n        {activeStep === 1 ?\r\n            <div>\r\n                <br /><br />\r\n                <Table\r\n                    items={data}\r\n                    columns={addressColumns}\r\n                    perPage={limit}\r\n                    page={page}\r\n                    onPageChange={page => setPage(page)}\r\n                    totalItems={count}\r\n                    isLoading={status === 'process'}\r\n                    selectable\r\n                    primaryKey={'_id'}\r\n                    selectedRow={selectedAddress}\r\n                    onSelectRow={item => setSelectedAddress(item)}\r\n                />\r\n \r\n                {!data.length && status === 'success' ?\r\n                    <div className=\"text-center my-10\">\r\n                        <Link to=\"/alamat-pengiriman/tambah\">\r\n                            Kamu belum memiliki alamat pengiriman <br /> <br />\r\n                            <Button> Tambah alamat </Button>\r\n                        </Link>\r\n                    </div>\r\n                    : null}\r\n \r\n                <br /> <br />\r\n                <Responsive desktop={2} tablet={2} mobile={2}>\r\n \r\n                    <div>\r\n                        <Button\r\n                            onClick={_ => setActiveStep(activeStep - 1)}\r\n                            color=\"gray\"\r\n                            iconBefore={<FaArrowLeft />}>\r\n                            Sebelumnya\r\n                          </Button>\r\n                    </div>\r\n \r\n                    <div className=\"text-right\">\r\n                        <Button\r\n                            onClick={_ => setActiveStep(activeStep + 1)}\r\n                            disabled={!selectedAddress}\r\n                            color=\"red\"\r\n                            iconAfter={<FaArrowRight />}>\r\n                            Selanjutnya\r\n                       </Button>\r\n                    </div>\r\n \r\n                </Responsive>\r\n \r\n            </div>\r\n            : null}\r\n \r\n        {activeStep === 2 ?\r\n            <div>\r\n                <Table\r\n                    columns={[\r\n                        {\r\n                            Header: '',\r\n                            accessor: 'label',\r\n                        },\r\n                        {\r\n                            Header: '',\r\n                            accessor: 'value'\r\n                        }\r\n                    ]}\r\n                    items={[\r\n                        {\r\n                            label: 'Alamat', value: <div>\r\n                                {selectedAddress.nama} <br />\r\n                                {selectedAddress.provinsi}, {selectedAddress.kabupaten}, {selectedAddress.kecamatan}, {selectedAddress.kelurahan} <br />\r\n                                {selectedAddress.detail}, {selectedAddress._id}\r\n \r\n                            </div>\r\n                        },\r\n                        { label: 'Subtotal', value: formatRupiah(sumPrice(cart)) },\r\n                        { label: 'Ongkir', value: formatRupiah(config.global_ongkir) },\r\n                        { label: 'Total', value: <b>{formatRupiah(sumPrice(cart) + parseInt(config.global_ongkir))}</b> },\r\n                    ]}\r\n                    showPagination={false}\r\n                />\r\n                <br />\r\n                <Responsive desktop={2} tablet={2} mobile={2}>\r\n                    <div>\r\n                        <Button\r\n                            onClick={_ => setActiveStep(activeStep - 1)}\r\n                            color=\"gray\"\r\n                            iconBefore={<FaArrowLeft />}>\r\n                            Sebelumnya\r\n                       </Button>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                        <Button\r\n                            onClick={handleCreateOrder}\r\n                            color=\"red\"\r\n                            size=\"large\"\r\n                            iconBefore={<FaRegCheckCircle />}\r\n                        >\r\n                            Bayar\r\n                       </Button>\r\n                    </div>\r\n                </Responsive>\r\n            </div>\r\n            : null}\r\n \r\n \r\n    </LayoutOne>\r\n}\r\n\r\n","import * as React from \"react\";\r\nimport { Badge } from \"upkit\";\r\nimport { string } from \"prop-types\";\r\nexport default function StatusLabel({ status }) {\r\n  switch (status) {\r\n    case \"waiting_payment\":\r\n      return <Badge color=\"orange\">Menunggu pembayaran</Badge>;\r\n    case \"paid\":\r\n      return <Badge color=\"green\">Sudah dibayar</Badge>;\r\n    case \"processing\":\r\n      return <Badge color=\"yellow\">Sedang diproses</Badge>;\r\n    case \"in_delivery\":\r\n      return <Badge color=\"blue\">Dalam pengiriman</Badge>;\r\n    case \"delivered\":\r\n      return <Badge color=\"green\">Pesanan diterima</Badge>;\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\nStatusLabel.defaultProps = {};\r\nStatusLabel.propTypes = {\r\n  status: string.isRequired,\r\n};\r\n","// import * as axios from \"axios\";\r\n// import {config} from \"../config\"\r\n\r\n// const getInvoiceByOrderId = async (order_id) => {\r\n//     let {token} = localStorage.getItem('auth') ? JSON.parse(localStorage.getItem('auth')) : {}; //hanya ada dua data besar yang disimpan di state auth yaitu user dan token\r\n\r\n//     return await axios.get(`${config.api_host}/api/invoices/${order_id}`, {\r\n//         headers: {\r\n//             authorization: `Bearer ${token}`\r\n//         }\r\n//     })\r\n\r\n// }\r\n\r\n// export {getInvoiceByOrderId}\r\n\r\nimport axios from \"axios\";\r\nimport { config } from \"../config\";\r\nexport async function getInvoiceByOrderId(order_id) {\r\n  let { token } = localStorage.getItem(\"auth\")\r\n    ? JSON.parse(localStorage.getItem(\"auth\"))\r\n    : {};\r\n  return await axios.get(`${config.api_host}/api/invoices/${order_id}`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n","// import * as React from \"react\";\r\n// import { useRouteMatch } from \"react-router-dom\";\r\n// import { LayoutOne, Text, Table } from \"upkit\";\r\n// import TopBar from \"../../components/TopBar/index\";\r\n// import BounceLoader from \"react-spinners/BounceLoader\";\r\n\r\n// import { getInvoiceByOrderId } from \"../../api/invoice\";\r\n// import StatusLabel from \"../../components/StatusLabel/index\";\r\n// import { config } from \"../../config\";\r\n// import { formatRupiah } from \"../../utils/formatRupiah\";\r\n\r\n// const Invoice = () => {\r\n//   let [invoice, setInvoice] = React.useState(null);\r\n//   let [error, setError] = React.useState(\"\");\r\n//   let [status, setStatus] = React.useState(\"process\");\r\n\r\n//   //Tangkap nilai params order_id\r\n//   let { params } = useRouteMatch();\r\n\r\n//   React.useState(() => {\r\n//     getInvoiceByOrderId(params?.order_id)\r\n//       .then(({ data }) => {\r\n//         //cek erro\r\n//         if (data?.error) {\r\n//           setError(data.message || \"Terjadi kesalahan yang tidak dikatahui\");\r\n//         }\r\n\r\n//         //setting nilai invoice berhasil tidak error\r\n//         setInvoice(data); //data ini merupakan nilai return dari fungsi getInvoiceByOrderId\r\n//       })\r\n//       .finally(() => setStatus(\"idle\"));\r\n//   }, []); //dia bututh parameter apad yaitu params\r\n\r\n//   if (error.length) {\r\n//     return (\r\n//       <LayoutOne>\r\n//         <TopBar />\r\n//         <Text as=\"h3\">Terjadi kesalahan</Text>\r\n//         {error}\r\n//       </LayoutOne>\r\n//     );\r\n//   }\r\n\r\n//   if (status === \"process\") {\r\n//     return (\r\n//       <LayoutOne>\r\n//         <div className=\"text-center py-10\">\r\n//           <div className=\"inline-block\">\r\n//             <BounceLoader color=\"red\" />\r\n//           </div>\r\n//         </div>\r\n//       </LayoutOne>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <LayoutOne>\r\n//       <TopBar />\r\n//       <Text as=\"h3\"> Invoice </Text>\r\n//       <br />\r\n//       <Table\r\n//         showPagination={false}\r\n//         items={[\r\n//           {\r\n//             label: \"Status\",\r\n//             value: <StatusLabel status={invoice?.payment_status} />,\r\n//           },\r\n//           { label: \"Order ID\", value: \"#\" + invoice?.order?.order_number },\r\n//           { label: \"Total amount\", value: formatRupiah(invoice?.total) },\r\n//           {\r\n//             label: \"Billed to\",\r\n//             value: (\r\n//               <div>\r\n//                 <b>{invoice?.user?.full_name} </b>\r\n//                 <br />\r\n//                 {invoice?.user?.email} <br />\r\n//                 <br />\r\n//                 {invoice?.delivery_address?.detail} <br />\r\n//                 {invoice?.delivery_address?.kelurahan},\r\n//                 {invoice?.delivery_address?.kecamatan} <br />\r\n//                 {invoice?.delivery_address?.kabupaten} <br />\r\n//                 {invoice?.delivery_address?.provinsi}\r\n//               </div>\r\n//             ),\r\n//           },\r\n//           {\r\n//             label: \"Payment to\",\r\n//             value: (\r\n//               <div>\r\n//                 {config.owner} <br />\r\n//                 {config.contact} <br />\r\n//                 {config.billing.account_no} <br />\r\n//                 {config.billing.bank_name}\r\n//               </div>\r\n//             ),\r\n//           },\r\n//         ]}\r\n//         columns={[\r\n//           { Header: \"Invoice\", accessor: \"label\" },\r\n//           { Header: \"\", accessor: \"value\" },\r\n//         ]}\r\n//       />\r\n//     </LayoutOne>\r\n//   );\r\n// };\r\n\r\n// export default Invoice;\r\n\r\nimport * as React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { LayoutOne, Text, Table } from \"upkit\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport TopBar from \"../../components/TopBar\";\r\nimport StatusLabel from \"../../components/StatusLabel\";\r\nimport { config } from \"../../config\";\r\n\r\nimport { formatRupiah } from \"../../utils/formatRupiah\";\r\nimport { getInvoiceByOrderId } from \"../../api/invoice\";\r\nexport default function Invoice() {\r\n  let { params } = useRouteMatch();\r\n  let [invoice, setInvoice] = React.useState(null);\r\n  let [error, setError] = React.useState(\"\");\r\n  let [status, setStatus] = React.useState(\"process\");\r\n  React.useState(() => {\r\n    getInvoiceByOrderId(params?.order_id)\r\n      .then(({ data }) => {\r\n        if (data?.error) {\r\n          setError(data.message || \"Terjadi kesalahan yang tidak diketahui\");\r\n        }\r\n        setInvoice(data);\r\n      })\r\n      .finally(() => setStatus(\"idle\"));\r\n  }, []);\r\n  if (error.length) {\r\n    return (\r\n      <LayoutOne>\r\n        <TopBar />\r\n        <Text as=\"h3\">Terjadi Kesalahan</Text>\r\n        {error}\r\n      </LayoutOne>\r\n    );\r\n  }\r\n  if (status === \"process\") {\r\n    return (\r\n      <LayoutOne>\r\n        <div className=\"text-center py-10\">\r\n          <div className=\"inline-block\">\r\n            <BounceLoader color=\"red\" />\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    );\r\n  }\r\n  return (\r\n    <LayoutOne>\r\n      <TopBar />\r\n      <Text as=\"h3\"> Invoice </Text>\r\n      <br />\r\n      <Table\r\n        showPagination={false}\r\n        items={[\r\n          {\r\n            label: \"Status\",\r\n            value: <StatusLabel status={invoice?.payment_status} />,\r\n          },\r\n          { label: \"Order ID\", value: \"#\" + invoice?.order?.order_number },\r\n          { label: \"Total amount\", value: formatRupiah(invoice?.total) },\r\n          {\r\n            label: \"Billed to\",\r\n            value: (\r\n              <div>\r\n                <b>{invoice?.user?.full_name} </b> <br />\r\n                {invoice?.user?.email} <br /> <br />\r\n                {invoice?.delivery_address?.detail} <br />\r\n                {invoice?.delivery_address?.kelurahan},\r\n                {invoice?.delivery_address?.kecamatan} <br />\r\n                {invoice?.delivery_address?.kabupaten} <br />\r\n                {invoice?.delivery_address?.provinsi}\r\n              </div>\r\n            ),\r\n          },\r\n          {\r\n            label: \"Payment to\",\r\n            value: (\r\n              <div>\r\n                {config.owner} <br />\r\n                {config.contact} <br />\r\n                {config.billing.account_no} <br />\r\n                {config.billing.bank_name}\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        columns={[\r\n          { Header: \"Invoice\", accessor: \"label\" },\r\n          { Header: \"\", accessor: \"value\" },\r\n        ]}\r\n      />\r\n    </LayoutOne>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { LayoutOne, Text, Card, Responsive } from \"upkit\";\r\nimport FaHome from \"@meronex/icons/fa/FaHome\";\r\nimport FaAddressBook from \"@meronex/icons/fa/FaAddressBook\";\r\nimport FaArrowRight from \"@meronex/icons/fa/FaArrowRight\";\r\nimport FaFileInvoice from \"@meronex/icons/fa/FaFileInvoice\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TopBar from \"../../components/TopBar/index\";\r\n\r\nconst UserAccount = () => {\r\n  const IconWrapper = ({ children }) => {\r\n    return (\r\n      <div className=\"text-white text-5xl flex justify-center mb-5\">\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const menus = [\r\n    {\r\n      label: \"Beranda\",\r\n      icon: (\r\n        <IconWrapper>\r\n          <FaHome />\r\n        </IconWrapper>\r\n      ),\r\n      url: \"/\",\r\n    },\r\n    {\r\n      label: \"Alamat\",\r\n      icon: (\r\n        <IconWrapper>\r\n          <FaAddressBook />\r\n        </IconWrapper>\r\n      ),\r\n      url: \"/alamat-pengiriman\",\r\n    },\r\n    {\r\n      label: \"Pesanan\",\r\n      icon: (\r\n        <IconWrapper>\r\n          <FaFileInvoice />\r\n        </IconWrapper>\r\n      ),\r\n      url: \"/pesanan\",\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      icon: (\r\n        <IconWrapper>\r\n          <FaArrowRight />\r\n        </IconWrapper>\r\n      ),\r\n      url: \"/logout\",\r\n    },\r\n  ];\r\n  return (\r\n    <LayoutOne>\r\n      <TopBar />\r\n      <Text as=\"h3\">akun anda</Text>\r\n      <br />\r\n      \r\n      <Responsive desktop={4} tablet={4} mobile={2}>\r\n        {menus.map((menu, index) => {\r\n          return (\r\n            <div key={index} className=\"px-2 pb-2\">\r\n              <Link to={menu.url}>\r\n                <Card\r\n                  header={menu.icon}\r\n                  body={\r\n                    <div className=\"text-center font-bold text-white\">\r\n                      {menu.label}\r\n                    </div>\r\n                  }\r\n                />\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </Responsive>\r\n    </LayoutOne>\r\n  );\r\n};\r\n\r\nexport default UserAccount;\r\n","//from library\r\nimport * as React from \"react\";\r\nimport {LayoutOne, Table, Button, Text} from \"upkit\";\r\nimport {Link} from \"react-router-dom\"\r\nimport FaFileInvoiceDollar from \"@meronex/icons/fa/FaFileInvoiceDollar\";\r\n\r\n//from internal folder\r\nimport TopBar from \"../../components/TopBar/index\";\r\nimport StatusLabel from \"../../components/StatusLabel/index\";\r\nimport {formatRupiah} from \"../../utils/formatRupiah\";\r\nimport {sumPrice} from \"../../utils/index\";\r\nimport {getOrders} from \"../../api/order\";\r\n\r\nconst columns = [\r\n    {Header: '', id: 'Status', accessor: order =>{\r\n        return (\r\n            <div>\r\n                #{order.order_number}<br />\r\n                <StatusLabel status={order.status} />\r\n            </div>\r\n        )\r\n    }},\r\n    {Header: 'Items', accessor: order => {\r\n        return (\r\n            <div>\r\n                {order.order_items.map(item => {\r\n                    return(\r\n                        <div key={item._id}> \r\n                            {item.name} {item.qty}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }},\r\n    {Header: 'Total', accessor: order => {\r\n        return (\r\n            <div>\r\n                {formatRupiah(sumPrice(order.order_items) + order.delivery_fee)}\r\n\r\n            </div>\r\n        )\r\n    }},\r\n    {Header: 'Inovice', accessor: order => {\r\n        return (\r\n            <div>\r\n                <Link to={`/invoice/${order._id}`}>\r\n                    <Button color=\"gray\" iconBefore={<FaFileInvoiceDollar />}>\r\n                        Invoice\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }}\r\n]\r\nconst UserOrders = () => {\r\n    //memerlukan beberapa state\r\n    let [pesanan, setPesanan] = React.useState([]);\r\n    let [count, setCount] = React.useState(0);\r\n    let [status, setStatus] = React.useState('idle');\r\n    let [page, setPage] = React.useState(1);\r\n    let [limit, setLimit] = React.useState(10);\r\n\r\n    const fetchPesanan = React.useCallback(async () => {\r\n        setStatus('process');\r\n        let {data} = await getOrders({limit, page});\r\n\r\n        if(data.error) {\r\n            setStatus('error');\r\n            return ;\r\n        }\r\n\r\n        setStatus('success');\r\n        setPesanan(data.data);\r\n        setCount(data.count);\r\n\r\n    }, [page, limit]);\r\n\r\n    React.useEffect(() => {\r\n        fetchPesanan();\r\n    }, [fetchPesanan])\r\n\r\n    return (\r\n        <LayoutOne> \r\n            <TopBar />\r\n            <Text as=\"h3\">Pesanan Anda</Text>\r\n            <br />\r\n\r\n            <Table\r\n            // data.data\r\n            items={pesanan}\r\n            totalItems={count}\r\n            columns={columns}\r\n            onPageChange={page => setPage(page)}\r\n            page={page}\r\n            isLoading={status === 'process'}\r\n             /> \r\n\r\n        </LayoutOne>\r\n    )\r\n}\r\n\r\nexport default UserOrders\r\n ","import * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LayoutOne } from \"upkit\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\n\r\nimport { userLogout } from \"../../features/Auth/actions\";\r\nimport { logout } from \"../../api/auth\";\r\n\r\nconst Logout = () => {\r\n  let history = useHistory();\r\n  let dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    logout()\r\n      .then(() => dispatch(userLogout()))\r\n      .then(() => history.push(\"/\"));\r\n  }, [history, logout]);\r\n\r\n  return (\r\n    <LayoutOne size=\"small\">\r\n      <div className=\"text-center flex flex-col justify-center items-center\">\r\n        <BounceLoader color=\"red\" />\r\n        <br />\r\n        Logging out ...\r\n      </div>\r\n    </LayoutOne>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import * as React from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst GuardRoute = ({children, ...rest}) => {\r\n    let {user} = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Route {...rest}>\r\n            {user ? children : <Redirect to=\"/login\" />}\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default GuardRoute;","import * as React from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst GuestOnlyRoute = ({children, ...rest}) => {\r\n    let {user} = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Route {...rest}>\r\n            {!user ? children : <Redirect to=\"/\" />}\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default GuestOnlyRoute","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"upkit/dist/style.min.css\";\nimport { Provider } from \"react-redux\";\n\nimport Home from \"./pages/Home/index\";\nimport store from \"./app/store\";\nimport { listen } from \"./app/listener\";\nimport Register from \"./pages/Register/index\";\nimport RegisterSuccess from \"./pages/RegisterSuccess/index\";\nimport Login from \"./pages/Login/index\";\nimport { getCart } from \"./api/cart\";\nimport UserAddressAdd from \"./pages/UserAddressAdd/index\";\nimport UserAddress from \"./pages/UserAddress/index\";\nimport Checkout from \"./pages/Checkout/index\";\nimport Invoice from \"./pages/Invoice/index\";\nimport UserAccount from \"./pages/UserAccount/index\";\nimport UserOrders from \"./pages/UserOrders/index\";\nimport Logout from \"./pages/Logout/index\";\nimport GuardRoute from \"./components/GuardRoute/index\";\nimport GuestOnlyRoute from \"./components/GuestOnlyRoute/index\";\n\nfunction App() {\n  //panggil fungsi listen() sekali saja saat komponen selesai render pertama kali\n  React.useEffect(() => {\n    //useEffect ini fungsinya untuk memuat halaman saat pertama kali buka webnya\n    listen();\n    getCart();\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/logout\">\n            <GuardRoute>\n              <Logout />\n            </GuardRoute>\n          </Route>\n          <Route path=\"/pesanan\">\n            <GuardRoute>\n              <UserOrders />\n            </GuardRoute>\n          </Route>\n          <Route path=\"/account\">\n            <GuardRoute>\n              <UserAccount />\n            </GuardRoute>\n          </Route>\n          <Route path=\"/invoice/:order_id\">\n            <GuardRoute>\n              <Invoice />\n            </GuardRoute>\n          </Route>\n          <Route path=\"/alamat-pengiriman/tambah\">\n            <GuardRoute>\n              {\" \"}\n              <UserAddressAdd />{\" \"}\n            </GuardRoute>\n          </Route>\n          <Route path=\"/alamat-pengiriman\">\n            <GuardRoute>\n              <UserAddress />\n            </GuardRoute>\n          </Route>\n          <Route path=\"/checkout\">\n            <GuardRoute>\n              <Checkout />\n            </GuardRoute>\n          </Route>\n          <Route path=\"/register/berhasil\">\n            <GuestOnlyRoute>\n              {\" \"}\n              <RegisterSuccess />{\" \"}\n            </GuestOnlyRoute>\n          </Route>\n          {/* Router untuk menuju page register */}\n          <Route path=\"/register\">\n            <GuestOnlyRoute>\n              <Register />\n            </GuestOnlyRoute>\n          </Route>\n          <Route path=\"/login\">\n            <GuestOnlyRoute>\n              {\" \"}\n              <Login />{\" \"}\n            </GuestOnlyRoute>\n          </Route>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/tailwind.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}